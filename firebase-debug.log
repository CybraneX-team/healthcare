[debug] [2025-05-20T15:47:52.530Z] ----------------------------------------------------------------------
[debug] [2025-05-20T15:47:52.532Z] Command:       /opt/homebrew/Cellar/node/23.10.0_1/bin/node /opt/homebrew/bin/firebase init
[debug] [2025-05-20T15:47:52.532Z] CLI Version:   14.4.0
[debug] [2025-05-20T15:47:52.532Z] Platform:      darwin
[debug] [2025-05-20T15:47:52.532Z] Node Version:  v23.10.0
[debug] [2025-05-20T15:47:52.533Z] Time:          Tue May 20 2025 21:17:52 GMT+0530 (India Standard Time)
[debug] [2025-05-20T15:47:52.533Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-05-20T15:47:52.535Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-05-20T15:47:52.535Z] > authorizing via signed-in user (developer.cybranex@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/zareenfatima/Documents/Code/health-dashboard

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2025-05-20T15:48:49.662Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:49.662Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:49.663Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2025-05-20T15:48:50.513Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2025-05-20T15:48:50.513Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project healthcare-17c9a (HealthCare) 
[info] 
=== Firestore Setup
[debug] [2025-05-20T15:48:52.483Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:52.483Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:52.483Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/healthcare-17c9a/services/firestore.googleapis.com [none]
[debug] [2025-05-20T15:48:52.483Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/healthcare-17c9a/services/firestore.googleapis.com x-goog-quota-user=projects/healthcare-17c9a
[debug] [2025-05-20T15:48:54.410Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/healthcare-17c9a/services/firestore.googleapis.com 200
[debug] [2025-05-20T15:48:54.410Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/healthcare-17c9a/services/firestore.googleapis.com [omitted]
[debug] [2025-05-20T15:48:54.410Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:54.410Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:54.410Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/healthcare-17c9a/databases/(default) [none]
[debug] [2025-05-20T15:48:56.175Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/healthcare-17c9a/databases/(default) 200
[debug] [2025-05-20T15:48:56.175Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/healthcare-17c9a/databases/(default) {"name":"projects/healthcare-17c9a/databases/(default)","uid":"038a0fd9-3801-4e30-a12c-7332e7cb2126","createTime":"2025-05-17T09:55:48.342476Z","updateTime":"2025-05-17T09:55:48.342476Z","locationId":"nam5","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-05-20T14:48:56.121477Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"s","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"etag":"ILSDl/2yso0DMJ3owJm2qo0D"}
[debug] [2025-05-20T15:48:56.175Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-05-20T15:48:56.176Z] > authorizing via signed-in user (developer.cybranex@gmail.com)
[debug] [2025-05-20T15:48:56.176Z] [iam] checking project healthcare-17c9a for permissions ["firebase.projects.get"]
[debug] [2025-05-20T15:48:56.176Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:56.176Z] Checked if tokens are valid: true, expires at: 1747759184603
[debug] [2025-05-20T15:48:56.176Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/healthcare-17c9a:testIamPermissions [none]
[debug] [2025-05-20T15:48:56.176Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/healthcare-17c9a:testIamPermissions x-goog-quota-user=projects/healthcare-17c9a
[debug] [2025-05-20T15:48:56.176Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/healthcare-17c9a:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-05-20T15:48:57.768Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/healthcare-17c9a:testIamPermissions 200
[debug] [2025-05-20T15:48:57.768Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/healthcare-17c9a:testIamPermissions {"permissions":["firebase.projects.get"]}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
